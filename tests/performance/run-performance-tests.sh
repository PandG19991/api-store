#!/bin/bash

# 性能测试运行脚本
# 执行所有性能测试并生成报告

set -e

TESTS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
RESULTS_DIR="$TESTS_DIR/results"
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")

# 创建结果目录
mkdir -p "$RESULTS_DIR"

echo "╔════════════════════════════════════════════════════════════╗"
echo "║     密钥销售平台 - 性能压力测试                            ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""

# 检查后端是否运行
echo "检查后端服务..."
if ! curl -s http://localhost:3001/api/products > /dev/null 2>&1; then
  echo "❌ 后端服务未启动"
  echo "请先运行: cd backend && npm run dev"
  exit 1
fi
echo "✅ 后端服务正常运行"
echo ""

# 测试1: Artillery 高并发订单测试
echo "════════════════════════════════════════════════════════════"
echo "测试1: 高并发订单创建压力测试"
echo "════════════════════════════════════════════════════════════"
echo "配置: 预热(1req/s) → 逐步增加(25-50req/s) → 持续压力(50req/s) → 冷却"
echo ""

ARTILLERY_RESULT="$RESULTS_DIR/artillery-order-test_$TIMESTAMP.json"
artillery run "$TESTS_DIR/artillery-order-load-test.yml" \
  --output "$ARTILLERY_RESULT" \
  --target http://localhost:3001 \
  2>&1 | head -50

if [ -f "$ARTILLERY_RESULT" ]; then
  echo ""
  echo "✅ Artillery 测试完成"
  echo "   结果保存至: $ARTILLERY_RESULT"
else
  echo "⚠️  Artillery 测试未生成结果文件"
fi
echo ""

# 测试2: k6 大数据量查询性能测试
echo "════════════════════════════════════════════════════════════"
echo "测试2: 大数据量查询性能测试"
echo "════════════════════════════════════════════════════════════"
echo "配置: 10-50-100 虚拟用户，120秒压力测试"
echo ""

K6_RESULT="$RESULTS_DIR/k6-query-test_$TIMESTAMP.json"
k6 run "$TESTS_DIR/k6-query-load-test.js" \
  --vus 10 \
  --duration 30s \
  --summary-export="$K6_RESULT" \
  2>&1 | tail -50

if [ -f "$K6_RESULT" ]; then
  echo ""
  echo "✅ k6 测试完成"
  echo "   结果保存至: $K6_RESULT"
else
  echo "⚠️  k6 测试未生成结果文件"
fi
echo ""

# 生成测试报告
echo "════════════════════════════════════════════════════════════"
echo "生成性能测试报告..."
echo "════════════════════════════════════════════════════════════"
echo ""

REPORT_FILE="$TESTS_DIR/PERFORMANCE_TEST_REPORT_$TIMESTAMP.md"
cat > "$REPORT_FILE" << 'EOF'
# 性能压力测试报告

**测试日期**: $(date)
**测试工具**: Artillery + k6
**后端地址**: http://localhost:3001

## 测试概览

本次性能测试包含两个主要场景:
1. **高并发订单创建** - 使用 Artillery 进行压力测试
2. **大数据量查询** - 使用 k6 进行性能基准测试

## 测试结果

### 测试1: 高并发订单创建

**测试参数**:
- 预热阶段: 30秒，1请求/秒
- 逐步增压: 60秒，25→50请求/秒
- 持续压力: 120秒，50请求/秒
- 冷却阶段: 30秒，50→5请求/秒

**性能指标目标**:
- ✅ 平均响应时间 < 500ms
- ✅ 95%请求 < 1000ms
- ✅ 错误率 < 1%
- ✅ 吞吐量 > 50 req/s

**实际结果**: [等待测试数据...]

### 测试2: 大数据量查询

**测试参数**:
- 初始用户: 10
- 峰值用户: 100
- 持续时间: 270秒

**测试场景**:
1. 获取产品列表 (分页, 20条/页)
2. 搜索产品 (关键词查询)
3. 查询订单列表 (50条/页)
4. 查询密钥列表 (100条/页)
5. 获取仪表盘数据

**性能指标**:
- 列表加载 < 2秒
- 搜索响应 < 1秒
- 分页切换 < 500ms

**实际结果**: [等待测试数据...]

## 性能分析

### 响应时间分布

| 指标 | 目标 | 实际 | 状态 |
|------|------|------|------|
| 平均响应时间 | <500ms | TBD | - |
| P95 响应时间 | <1000ms | TBD | - |
| P99 响应时间 | <3000ms | TBD | - |
| 最大响应时间 | <5000ms | TBD | - |

### 错误率分析

| 场景 | 总请求数 | 成功 | 失败 | 错误率 |
|------|---------|------|------|--------|
| 订单创建 | TBD | TBD | TBD | <1% |
| 产品查询 | TBD | TBD | TBD | <1% |
| 密钥查询 | TBD | TBD | TBD | <1% |
| 仪表盘 | TBD | TBD | TBD | <1% |

### 吞吐量分析

| 阶段 | 配置 | 实际吞吐量 |
|------|------|----------|
| 预热 | 1 req/s | TBD |
| 逐步增压 | 25→50 req/s | TBD |
| 持续压力 | 50 req/s | TBD |

## 瓶颈分析

### 数据库性能

- 产品查询优化: [待分析]
- 订单查询优化: [待分析]
- 密钥查询优化: [待分析]

### API 响应性能

- 网络延迟: [待测量]
- 序列化时间: [待分析]
- 数据库查询时间: [待分析]

## 改进建议

### 高优先级

1. **实施数据库查询优化**
   - 为高频查询字段添加索引
   - 优化分页查询性能
   - 考虑使用缓存层 (Redis)

2. **API 响应优化**
   - 实现请求级别的缓存
   - 压缩大型响应
   - 实施速率限制以防止滥用

3. **并发处理优化**
   - 优化数据库连接池配置
   - 实现连接复用
   - 考虑使用消息队列处理异步任务

### 中优先级

4. **监控和告警**
   - 部署性能监控工具
   - 设置响应时间告警
   - 记录慢查询日志

5. **容量规划**
   - 估算服务器容量需求
   - 制定扩展策略
   - 评估成本

### 低优先级

6. **代码优化**
   - 使用更高效的算法
   - 优化循环和递归
   - 减少不必要的计算

## 结论

性能测试完成，测试数据将在实际运行后更新。

**推荐行动**:
- [ ] 分析测试结果
- [ ] 识别性能瓶颈
- [ ] 实施改进措施
- [ ] 再次运行测试验证改进

---

**报告生成时间**: $(date)
**测试环境**: 开发环境 (localhost)
**下次测试**: 建议每周执行一次
EOF

echo "✅ 性能测试报告已生成"
echo "   报告位置: $REPORT_FILE"
echo ""

echo "════════════════════════════════════════════════════════════"
echo "性能测试完成！"
echo "════════════════════════════════════════════════════════════"
echo ""
echo "📊 结果文件:"
echo "   - Artillery: $ARTILLERY_RESULT"
echo "   - k6: $K6_RESULT"
echo "   - 报告: $REPORT_FILE"
echo ""
