// Prisma Schema 定义文件
// 文档: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==================== 产品相关表 ====================

/// 产品表
model Product {
  id             Int       @id @default(autoincrement())
  name           String    @db.VarChar(255)
  slug           String    @unique @db.VarChar(255)
  descriptionZh  String?   @map("description_zh") @db.Text
  descriptionEn  String?   @map("description_en") @db.Text
  imageUrl       String?   @map("image_url") @db.VarChar(500)
  videoUrl       String?   @map("video_url") @db.VarChar(500)
  status         String    @default("active") @db.VarChar(20) // active, inactive
  sortOrder      Int       @default(0) @map("sort_order")
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 关联关系
  prices         Price[]
  licenseKeys    LicenseKey[]
  orderItems     OrderItem[]

  // 性能优化索引
  @@index([status])
  @@index([slug])
  @@index([status, sortOrder])
  @@map("products")
}

/// 价格表 - 不同区域的价格
model Price {
  id             Int       @id @default(autoincrement())
  productId      Int       @map("product_id")
  countryCode    String    @map("country_code") @db.VarChar(2) // ISO 3166-1
  currency       String    @db.VarChar(3) // ISO 4217 (CNY, USD, JPY)
  amount         Decimal   @db.Decimal(10, 2)
  originalAmount Decimal?  @map("original_amount") @db.Decimal(10, 2) // 原价(用于显示折扣)
  isDefault      Boolean   @default(false) @map("is_default") // 是否为默认价格
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 关联关系
  product        Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems     OrderItem[]

  @@unique([productId, countryCode])
  @@index([productId])
  @@index([countryCode])
  @@map("prices")
}

// ==================== 密钥相关表 ====================

/// 密钥表
model LicenseKey {
  id                 Int       @id @default(autoincrement())
  productId          Int       @map("product_id")
  keyValueEncrypted  String    @map("key_value_encrypted") @db.Text
  status             String    @default("available") @db.VarChar(20) // available, sold, revoked
  orderId            Int?      @map("order_id")
  createdAt          DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  soldAt             DateTime? @map("sold_at") @db.Timestamptz(6)
  revokedAt          DateTime? @map("revoked_at") @db.Timestamptz(6)
  revokeReason       String?   @map("revoke_reason") @db.Text

  // 关联关系
  product            Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  order              Order?    @relation(fields: [orderId], references: [id])
  orderItems         OrderItem[]

  // 性能优化索引
  @@index([productId, status])
  @@index([orderId])
  @@index([status])
  @@index([createdAt])
  @@index([soldAt])
  @@map("license_keys")
}

// ==================== 订单相关表 ====================

/// 订单表
model Order {
  id              Int       @id @default(autoincrement())
  orderNo         String    @unique @map("order_no") @db.VarChar(32)
  customerEmail   String    @map("customer_email") @db.VarChar(255)
  totalAmount     Decimal   @map("total_amount") @db.Decimal(10, 2)
  currency        String    @db.VarChar(3)
  status          String    @default("pending") @db.VarChar(20) // pending, paid, completed, failed, refunded
  paymentMethod   String?   @map("payment_method") @db.VarChar(20) // alipay, wechat
  paymentTxnId    String?   @map("payment_txn_id") @db.VarChar(255) // 支付平台交易号
  countryCode     String?   @map("country_code") @db.VarChar(2)
  ipAddress       String?   @map("ip_address") @db.VarChar(45)
  userAgent       String?   @map("user_agent") @db.Text
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  paidAt          DateTime? @map("paid_at") @db.Timestamptz(6)
  completedAt     DateTime? @map("completed_at") @db.Timestamptz(6)

  // 关联关系
  orderItems      OrderItem[]
  licenseKeys     LicenseKey[]

  // 性能优化索引
  @@index([customerEmail])
  @@index([orderNo])
  @@index([status])
  @@index([createdAt(sort: Desc)])
  @@index([paymentTxnId])
  @@index([status, createdAt])
  @@index([customerEmail, status])
  @@map("orders")
}

/// 订单项表
model OrderItem {
  id              Int       @id @default(autoincrement())
  orderId         Int       @map("order_id")
  productId       Int       @map("product_id")
  productName     String    @map("product_name") @db.VarChar(255) // 快照
  priceId         Int?      @map("price_id")
  unitPrice       Decimal   @map("unit_price") @db.Decimal(10, 2) // 快照
  quantity        Int       @default(1)
  subtotal        Decimal   @db.Decimal(10, 2)
  licenseKeyId    Int?      @map("license_key_id")

  // 关联关系
  order           Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product         Product   @relation(fields: [productId], references: [id])
  price           Price?    @relation(fields: [priceId], references: [id])
  licenseKey      LicenseKey? @relation(fields: [licenseKeyId], references: [id])

  @@index([orderId])
  @@index([licenseKeyId])
  @@map("order_items")
}

// ==================== 验证码表 ====================

/// 邮箱验证码表
model VerificationCode {
  id         Int       @id @default(autoincrement())
  email      String    @db.VarChar(255)
  code       String    @db.VarChar(6)
  purpose    String    @db.VarChar(20) // order_lookup
  expiresAt  DateTime  @map("expires_at") @db.Timestamptz(6)
  usedAt     DateTime? @map("used_at") @db.Timestamptz(6)
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)

  @@index([email, code, purpose])
  @@index([expiresAt])
  @@map("verification_codes")
}

// ==================== 管理员表 ====================

/// 管理员用户表
model AdminUser {
  id           Int       @id @default(autoincrement())
  username     String    @unique @db.VarChar(50)
  passwordHash String    @map("password_hash") @db.VarChar(255)
  email        String?   @unique @db.VarChar(255)
  role         String    @default("admin") @db.VarChar(20) // admin, super_admin
  isActive     Boolean   @default(true) @map("is_active")
  lastLoginAt  DateTime? @map("last_login_at") @db.Timestamptz(6)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)

  @@index([username])
  @@map("admin_users")
}

// ==================== 系统配置表 ====================

/// 系统配置表 (键值对存储)
model SystemSetting {
  id          Int       @id @default(autoincrement())
  key         String    @unique @db.VarChar(100)
  value       String?   @db.Text // JSON 格式
  description String?   @db.Text
  updatedAt   DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("system_settings")
}
